name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Required secrets for deployment:
# VERCEL_TOKEN - Vercel deployment token
# VERCEL_ORG_ID - Vercel organization ID  
# VERCEL_PROJECT_ID - Vercel project ID
# HEROKU_API_KEY - Heroku API key
# HEROKU_EMAIL - Heroku account email

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Create test environment file
      run: |
        cd backend
        echo "NODE_ENV=test" > .env
        echo "MONGODB_URI=mongodb://localhost:27017/meumt_test" >> .env
        echo "JWT_SECRET=test_jwt_secret_key" >> .env
        echo "JWT_EXPIRE=30d" >> .env
    
    - name: Run backend tests
      run: |
        cd backend
        npm test
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Run backend linting
      run: |
        cd backend
        npm run lint || true  # Don't fail if no lint script
    
  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Build and prepare for deployment
      run: |
        cd backend
        npm ci --only=production
        cd ../frontend
        npm ci
        npm run build
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: production-files
        path: |
          backend/
          frontend/dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js for deployment
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Deploy Frontend to Vercel
      run: |
        echo "ðŸš€ Frontend deployment would run here"
        echo "Configure Vercel CLI with your tokens in repository secrets:"
        echo "- VERCEL_TOKEN"
        echo "- VERCEL_ORG_ID" 
        echo "- VERCEL_PROJECT_ID"
        
    - name: Deploy Backend to Heroku
      run: |
        echo "ðŸš€ Backend deployment would run here"
        echo "Configure Heroku CLI with your tokens in repository secrets:"
        echo "- HEROKU_API_KEY"
        echo "- HEROKU_EMAIL"
        
    - name: Deployment Summary
      run: |
        echo "âœ… CI/CD Pipeline completed successfully"
        echo "ðŸ“¦ Build artifacts ready for deployment"
        echo "ðŸ”§ Configure deployment secrets to enable automatic deployment" 